##
# @file
#
# Makefile for the Demo C++ Framework project
#     - Microsoft Visual C++ 7.0 Compiler (definitions).
#
# @author Emil Maskovsky
#


############################
#     Compiler options     #
############################

# Suffix of object file names.
# (cannot be empty)
OBJ_SFX := obj


# ANSI-C compiler settings.

# The compiler executable.
CC := cl -nologo

# The compiler global flags.
# (used standardized name CFLAFS, which can be
# overridden on the make command line)
CFLAGS := -GR -GX -GF

# Output name flag.
CC_OUT := -Fo
# Compile-only flag.
CC_COMPILE_ONLY := -c
# Macro definition flag.
CC_DEFINE := -D
# Include directory flag.
CC_INCLUDE := -I

# Flags for different build configurations.
CFLAGS_DEBUG := -W4 -Od -ZI -GZ
CFLAGS_RELEASE := -W3 -O2
CFLAGS_LIB_DEBUG := -MLd
CFLAGS_LIB_RELEASE := -ML
CFLAGS_LIBMT_DEBUG := -MTd
CFLAGS_LIBMT_RELEASE := -MT
CFLAGS_DLL_DEBUG := -MDd
CFLAGS_DLL_RELEASE := -MD

# Special options, which are expanded at-the-place.
CFLAGS_OPTIONS = -Fd$$(@D)vc70.pdb


# C++ compiler settings.

# The compiler executable.
CXX := $(CC)

# The compiler global flags.
# (used standardized name CXXFLAGS, which can be
# overridden on the make command line)
CXXFLAGS := $(CFLAGS)

# Output name flag.
CXX_OUT := $(CC_OUT)
# Compile-only flag.
CXX_COMPILE_ONLY := $(CC_COMPILE_ONLY)
# Macro definition flag.
CXX_DEFINE := $(CC_DEFINE)
# Include directory flag.
CXX_INCLUDE := $(CC_INCLUDE)

# Flags for different build configurations.
CXXFLAGS_DEBUG := $(CFLAGS_DEBUG)
CXXFLAGS_RELEASE := $(CFLAGS_RELEASE)
CXXFLAGS_LIB_DEBUG := $(CFLAGS_LIB_DEBUG)
CXXFLAGS_LIB_RELEASE := $(CFLAGS_LIB_RELEASE)
CXXFLAGS_LIBMT_DEBUG := $(CFLAGS_LIBMT_DEBUG)
CXXFLAGS_LIBMT_RELEASE := $(CFLAGS_LIBMT_RELEASE)
CXXFLAGS_DLL_DEBUG := $(CFLAGS_DLL_DEBUG)
CXXFLAGS_DLL_RELEASE := $(CFLAGS_DLL_RELEASE)

# Special options, which are expanded at-the-place.
CXXFLAGS_OPTIONS = $(CFLAGS_OPTIONS)


# Resource compiler settings.

# The compiler executable.
RC := rc

# Suffix of compiled resource files.
# (cannot be empty, if RC defined)
RES_SFX := res

# The compiler global flags.
# (used standardized name RCFLAGS, which can be
# overridden on the make command line)
RCFLAGS := /n /r

# Output name flag.
RC_OUT := /fo

# Macro definition flag.
RC_DEFINE := /d
# Include directory flag.
RC_INCLUDE := /i


##########################
#     Linker options     #
##########################

# The linker global flags.
# (used standardized name LDFLAGS, which can be
# overridden on the make command line)
LDFLAGS := /nologo

# Suffix of object libraries.
# (cannot be empty)
LIB_SFX := lib


# C++ linker settings.

# The linker executable.
LNKC := link

# The linker global flags.
# (includes standard name LDFLAGS, which can be
# overridden on the make command line)
LNKC_FLAGS := $(LDFLAGS)

# Output name flag.
LNKC_OUT := /out:

# Flags for different build configurations.
LNKC_FLAGS_DEBUG := /debug /opt:noref
LNKC_FLAGS_RELEASE := /opt:ref

LNKC_LIB_SFX := .$(LIB_SFX)


# C++ librarian compiler settings.

# The librarian executable.
LIBC := $(LNKC)

# The librarian global flags.
# (includes standard name LDFLAGS, which can be
# overridden on the make command line)
LIBC_FLAGS := /lib $(LDFLAGS)

# Output name flag.
LIBC_OUT := $(LNKC_OUT)


# C++ dynamic library linker settings.

# The linker executable.
DLLC := $(LNKC)

# The linker global flags.
# (includes standard name LDFLAGS, which can be
# overridden on the make command line)
DLLC_FLAGS := /dll $(LNKC_FLAGS)

# Output name flag.
DLLC_OUT := $(LNKC_OUT)

# Flags for different build configurations.
DLLC_FLAGS_DEBUG := $(LNKC_FLAGS_DEBUG)
DLLC_FLAGS_RELEASE := $(LNKC_FLAGS_RELEASE)


# Addditional clean masks for 'clean...' targets.
MXCPP_CLEAN_MASK = $(1)*.sbr
MXCPP_CLEAN_MASK_DEBUG = $(1)vc70.pdb $(1)vc70.idb

# Addditional clean masks for 'cleanall...' targets.
MXCPP_CLEANALL_MASK_DLL = $(2:.dll=.lib) $(2:.dll=.exp)
MXCPP_CLEANALL_MASK_DLL_DEBUG =  $(2:.dll=.pdb) $(2:.dll=.ilk)


# Include parent definitions.
include ../system.ini

# EOF #
