##
# @file
#
# Makefile for the Demo C++ Framework project
#     - IBM Mainframe platform dependent options (definitions).
#
# @author Emil Maskovsky
#


# The project source root.
MXCPP_PROJECT_ROOT := ../../../


# Informational output (echoing).
ECHO := echo


# Suppose Linux if not set up for Windows.
$(if $(strip $(RM)),,$(eval RM := rm))
$(if $(strip $(NULL)),,$(eval NULL := /dev/null))

# Macros for hiding command output.
NOOUT := >$(NULL)
NOERROUT := 2>$(NULL)


# Include global definitions.
include ../../global.ini


MXCPP_EXTRA_INCLUDE :=	\
sysdefs.hpp	\
types.hpp	\
defs/helpers.hpp	\
defs/newdef.hpp	\
defs/newundef.hpp	\
defs/mvs.hpp	\
defs/ibmcpp.hpp	\
tests/TestApp.hpp


# The script suffix.
MXCPP_SCR_SUFF := txt
MXCPP_FINALSCR_SUFF := tso

# The file transfer list.
MXCPP_TRANSFER_LIST := Transfer.$(MXCPP_SCR_SUFF)

# The directory init list.
MXCPP_DIRINIT_LIST := DirInit.$(MXCPP_SCR_SUFF)

# The connect script.
MXCPP_LOGIN_SCRIPT := Login.$(MXCPP_SCR_SUFF)

# The data set script.
MXCPP_DSSETUP_SCRIPT := DSsetup.$(MXCPP_SCR_SUFF)

# The source list for build phase.
MXCPP_OBJLIB_LIST := LIBOBJ
MXCPP_NAME_OBJLIB := OBJLIB

MXCPP_JOBS_LIST :=	\
$(MXCPP_OBJLIB_LIST)


# Names for different TSO script settings.

# Source directory.
MXCPP_NAME_ROOT_DIR := BASE_DIR
MXCPP_NAME_INCLUDE_DIR := INCLUDE_DIR
MXCPP_NAME_SOURCE_DIR := SOURCE_DIR
MXCPP_NAME_INTERNAL_INCLUDE_DIR := INTERNAL_DIR
MXCPP_NAME_TEST_DIR := TEST_DIR
MXCPP_NAME_JOBS_DIR := JOBS_DIR
MXCPP_NAME_TARGET_DIR := HOST_DS
MXCPP_NAME_TARGET_DIR_VALUE := $(MXCPP_CONFIG_SUFFIX)CppFw
# Suffixes.
MXCPP_NAME_HOST_HPP := HOST_HPP
MXCPP_NAME_HOST_HPP_VALUE := HPP
MXCPP_NAME_HOST_INL := HOST_INL
MXCPP_NAME_HOST_INL_VALUE := INL
MXCPP_NAME_HOST_CPP := HOST_CPP
MXCPP_NAME_HOST_CPP_VALUE := CPP
MXCPP_NAME_HOST_TEST := HOST_TEST
MXCPP_NAME_HOST_TEST_VALUE := $(MXCPP_NAME_HOST_CPP_VALUE).TEST
MXCPP_NAME_HOST_JOBS := HOST_JOBS
MXCPP_NAME_HOST_JOBS_VALUE := JOBS


# EOF #
